name: CI/CD Workflow

on:
  push:
    branches:
      - develop
      - test
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: gite
          MYSQL_USER: symfony
          MYSQL_PASSWORD: symfony
        ports:
          - 3306/tcp
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🚀 Démarrer Docker Compose
        run: |
          MYSQL_PORT="" docker compose up -d --build
          sleep 10
          docker compose ps

      - name: 📦 Installer les dépendances PHP
        run: |
          docker compose exec -T php composer install --no-interaction --prefer-dist

      - name: 🚀 Clear Cache Symfony
        run: |
          docker compose exec -T php php bin/console cache:clear --no-warmup

      - name: 🗄️ Doctrine Migrations
        run: |
          docker compose exec -T php php bin/console doctrine:database:create --if-not-exists
          docker compose exec -T php php bin/console doctrine:migrations:migrate --no-interaction

      - name: ✅ PHPUnit Tests
        run: |
          docker compose exec -T php php bin/phpunit

  merge-to-test:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Merge develop → test
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout test
          git pull origin test
          git merge --no-ff develop -m "CI/CD: Merge develop into test"
          git push origin test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge-to-main:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Merge test → main
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout main
          git pull origin main
          git merge --no-ff test -m "CI/CD: Merge test into main"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: merge-to-main
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout main
        uses: actions/checkout@v3
        with:
          ref: main

      - name: 🚀 Déploiement VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/projet-gite
            git pull origin main
            sudo chown -R www-data:www-data /var/www
            sudo chmod -R 775 /var/www/var/cache /var/www/var/log
            php bin/console cache:clear --env=prod
            php bin/console cache:warmup --env=prod
            sudo systemctl restart apache2