name: CI/CD Workflow

# Déclenchement du workflow lors d'un push sur la branche develop
on:
  push:
    branches:
      - develop  # Lorsqu'un push est fait sur develop, ce workflow démarre

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Installer PHP et ses extensions
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # Créer le fichier .env pour les tests
      - name: Create .env file
        run: |
          echo "APP_ENV=prod" >> app/.env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> app/.env
          echo "DATABASE_URL=mysql://user:password@127.0.0.1:3306/test_db" >> app/.env

      # Installer les dépendances
      - name: Install dependencies
        run: |
          cd app && composer install --no-interaction --prefer-dist

      # Exécuter les tests
      - name: Run tests
        run: |
          cd app && vendor/bin/phpunit || true

  merge-to-main:
    needs: test
    runs-on: ubuntu-latest
    if: success()  # Exécute cette étape uniquement si les tests réussissent

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0  # Récupérer tout l'historique pour éviter les erreurs de divergence

      - name: Checkout develop branch
        run: |
          git fetch origin develop
          git checkout develop

      - name: Check if merge is needed
        run: |
          git checkout main
          git pull origin main
          if git merge-base --is-ancestor develop main; then
            echo "No merge needed, main is already up to date."
            exit 0
          fi

      - name: Merge develop into main
        run: |
          git merge --no-ff develop -m "Merge develop into main"
          git push origin main

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: merge-to-main
    runs-on: ubuntu-latest
    if: success()  # Déploie uniquement si la fusion a réussi

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/projet-gite
            git pull origin main
            sudo chown -R www-data:www-data app/var
            sudo chmod -R 775 app/var/cache app/var/log
            sudo rm -rf app/var/cache/prod
            php bin/console cache:clear --env=prod
            php bin/console cache:warmup --env=prod
            sudo systemctl restart apache2
