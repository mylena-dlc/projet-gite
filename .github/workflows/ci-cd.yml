name: CI/CD Workflow

on:
  push:
    branches:
      - develop
      - test

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for MySQL
        run: sleep 15

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Create .env file
        run: |
          touch app/.env
          echo "APP_ENV=test" > app/.env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> app/.env
          echo "DATABASE_URL=mysql://user:password@127.0.0.1:3306/test_db?serverVersion=8.0" >> app/.env
          echo "MAILER_DSN=null://null" >> app/.env

      - name: Create MySQL Database
        run: |
          mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_db;"
          mysql -h 127.0.0.1 -u root -proot -e "GRANT ALL PRIVILEGES ON test_db.* TO 'user'@'%';"
          mysql -h 127.0.0.1 -u root -proot -e "FLUSH PRIVILEGES;"

      - name: Install PHP dependencies
        run: |
          cd app && composer install --no-interaction --prefer-dist

      - name: Run database migrations
        run: |
          cd app && php bin/console doctrine:migrations:migrate --no-interaction

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install NPM dependencies
        run: |
          cd app && npm install

      - name: Build assets
        run: |
          cd app && npm run build

      - name: Debug routes
        run: |
          cd app && php bin/console debug:router

      - name: Run tests
        run: |
          cd app && vendor/bin/phpunit